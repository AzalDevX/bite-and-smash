---
import Layout from '../layouts/Layout.astro';
import ScrollProgress from '../components/ScrollProgress.astro';
---

<Layout title="Menú - Bite & Smash">
  <ScrollProgress />
  <main class="bg-[#050505] min-h-screen text-white overflow-hidden">
    <div class="mx-16 px-4 py-16">
      <h1 class="text-[12rem] font-bold tracking-wide text-center leading-none absolute top-0 w-full">
        <span class="block gradient-text">Nuestro</span>
        <span class="block -mt-16 gradient-text">Menú</span>
      </h1>
      
      <div class="mt-48 relative z-10">
        {['Entrantes', 'Principales', 'Postres', 'Bebidas'].map((category, index) => (
          <div class="mb-16" data-animate>
            <h2 class="text-4xl sm:text-5xl md:text-6xl font-bold mb-8 text-yellow-400">{category}</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              {[...Array(4)].map((_, i) => (
                <div key={i} class="group">
                  <div class="flex justify-between items-center border-b border-yellow-400/30 pb-4 mb-4 transition-all duration-300 group-hover:border-yellow-400">
                    <span class="text-xl sm:text-2xl font-semibold">{`Plato ${i + 1}`}</span>
                    <span class="text-yellow-400 font-bold text-lg sm:text-xl">{`€${(Math.random() * 20 + 5).toFixed(2)}`}</span>
                  </div>
                  <p class="text-gray-400 text-sm sm:text-base">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  </main>
</Layout>

<style>
  .gradient-text {
    background: linear-gradient(to bottom, #facc15 50%, #000000 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
  }

  [data-animate] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  [data-animate].animate {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const animateOnScroll = (entries, observer) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate');
        observer.unobserve(entry.target);
      }
    });
  };

  const observer = new IntersectionObserver(animateOnScroll, {
    root: null,
    rootMargin: '0px',
    threshold: 0.1
  });

  document.querySelectorAll('[data-animate]').forEach(el => observer.observe(el));
</script>